name: Dart Build and Release

on:
  push:
    branches:
      - main # Launch when pushes on main
    tags:
      - 'v*' # Launch when new tag is pushed
  pull_request:
    branches:
      - main # Launch when pull requests on main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # Build on both Linux and Windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable # Stable Dart SDK version

      - name: Install dependencies
        run: dart pub get

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            dart compile exe bin/main.dart -o bin/dart_cmd_bot_linux.exe
          else
            dart compile exe bin/main.dart -o bin/dart_cmd_bot_windows.exe
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: build/${{ matrix.os == 'ubuntu-latest' && 'linux.exe' || 'windows.exe' }} # Executable path

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token for release
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/build-ubuntu-latest/dart_cmd_bot_linux.exe
          asset_name: dart_cmd_bot_linux.exe

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/build-windows-latest/dart_cmd_bot_windows.exe
          asset_name: dart_cmd_bot_windows.exe

      - name: Upload Install Scripts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: install.sh
          asset_name: install.sh

      - name: Upload Install Scripts (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: install.ps1
          asset_name: install.ps1